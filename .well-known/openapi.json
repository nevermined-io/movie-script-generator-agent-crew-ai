{
  "openapi": "3.0.3",
  "info": {
    "title": "Movie Script Generator A2A Agent",
    "description": "AI agent that generates detailed movie scripts based on input parameters, using a crew of specialized AI agents for different aspects of script creation",
    "version": "1.0.0",
    "contact": {
      "name": "Nevermined",
      "url": "https://nevermined.io"
    }
  },
  "servers": [
    {
      "url": "https://movie-script-maker.nevermined.app",
      "description": "Production server"
    }
  ],
  "paths": {
    "/.well-known/openapi.json": {
      "get": {
        "summary": "OpenAPI Specification",
        "description": "Get the OpenAPI specification for this API",
        "operationId": "getOpenAPISpec",
        "responses": {
          "200": {
            "description": "OpenAPI specification in JSON format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "OpenAPI 3.0.3 specification"
                }
              }
            }
          }
        }
      }
    },
    "/.well-known/agent.json": {
      "get": {
        "summary": "Get Agent Card",
        "description": "Get the agent card describing this agent's capabilities",
        "operationId": "getAgentCard",
        "responses": {
          "200": {
            "description": "Agent card information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentCard"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Simple health check endpoint",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "List Tasks",
        "description": "List all tasks, optionally filtered by session ID and state",
        "operationId": "listTasks",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Optional session ID to filter by"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "submitted",
                "working",
                "input-required",
                "completed",
                "failed",
                "cancelled"
              ]
            },
            "description": "Optional task state to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/send": {
      "post": {
        "summary": "Send Task",
        "description": "Send a task to be processed by the agent",
        "operationId": "sendTask",
        "security": [
          {
            "paymentProxy": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Payment required to use this endpoint"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/sendSubscribe": {
      "post": {
        "summary": "Send Task with Streaming Updates",
        "description": "Create and process a new task with streaming updates via Server-Sent Events (SSE)",
        "operationId": "sendTaskSubscribe",
        "security": [
          {
            "paymentProxy": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stream of task updates",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string",
                      "enum": ["update", "error"]
                    },
                    "data": {
                      "type": "string",
                      "description": "JSON string containing task update or error information"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Payment required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Payment required to use this endpoint"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "summary": "Get Task Status",
        "description": "Check the status of a specific task",
        "operationId": "getTaskStatus",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the task to check"
          }
        ],
        "responses": {
          "200": {
            "description": "Task status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/cancel": {
      "post": {
        "summary": "Cancel Task",
        "description": "Cancel a running task",
        "operationId": "cancelTask",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the task to cancel"
          }
        ],
        "responses": {
          "200": {
            "description": "Task cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/history": {
      "get": {
        "summary": "Get Task History",
        "description": "Get the complete history of a task including all state transitions and messages",
        "operationId": "getTaskHistory",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the task to get history for"
          }
        ],
        "responses": {
          "200": {
            "description": "Task history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskHistoryEntry"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{taskId}/pushNotification": {
      "post": {
        "summary": "Set Push Notification",
        "description": "Set push notification configuration for a task",
        "operationId": "setPushNotification",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the task"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushNotificationConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Push notification configuration saved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotificationConfig"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get Push Notification",
        "description": "Get push notification configuration for a task",
        "operationId": "getPushNotification",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the task"
          }
        ],
        "responses": {
          "200": {
            "description": "Push notification configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushNotificationConfig"
                }
              }
            }
          },
          "404": {
            "description": "Task or configuration not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentProvider": {
        "type": "object",
        "properties": {
          "organization": {
            "type": "string",
            "example": "Nevermined"
          },
          "url": {
            "type": "string",
            "example": "https://nevermined.io"
          }
        },
        "required": ["organization"]
      },
      "AgentCapabilities": {
        "type": "object",
        "properties": {
          "streaming": {
            "type": "boolean",
            "default": false
          },
          "pushNotifications": {
            "type": "boolean",
            "default": false
          },
          "stateTransitionHistory": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "InputParameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "required": ["name", "description", "required", "type"]
      },
      "AgentSkill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inputModes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "outputModes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputParameter"
            }
          }
        },
        "required": ["id", "name"]
      },
      "AgentCard": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/AgentProvider"
          },
          "version": {
            "type": "string"
          },
          "documentationUrl": {
            "type": "string"
          },
          "capabilities": {
            "$ref": "#/components/schemas/AgentCapabilities"
          },
          "defaultInputModes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultOutputModes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentSkill"
            }
          }
        },
        "required": [
          "name",
          "url",
          "version",
          "capabilities",
          "defaultInputModes",
          "defaultOutputModes",
          "skills"
        ]
      },
      "TaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Last Algorithm"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["sci-fi", "thriller", "AI"]
          },
          "idea": {
            "type": "string",
            "example": "A story about the last human programmer in a world dominated by AI"
          },
          "duration": {
            "type": "integer",
            "example": 90
          },
          "lyrics": {
            "type": "string"
          },
          "sessionId": {
            "type": "string",
            "description": "Optional session identifier for grouping related tasks"
          }
        },
        "required": ["title", "tags", "idea"]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "state": {
                "type": "string",
                "enum": [
                  "submitted",
                  "working",
                  "input-required",
                  "completed",
                  "failed",
                  "cancelled"
                ]
              },
              "message": {
                "type": "object",
                "properties": {
                  "parts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "result": {
            "type": "object"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "sessionId": {
            "type": "string"
          }
        },
        "required": ["id", "status"]
      },
      "TaskHistoryEntry": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "enum": [
              "submitted",
              "working",
              "input-required",
              "completed",
              "failed",
              "cancelled"
            ]
          },
          "message": {
            "type": "object",
            "properties": {
              "parts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "required": ["timestamp", "state"]
      },
      "PushNotificationConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Webhook URL to receive push notifications"
          },
          "token": {
            "type": "string",
            "description": "Optional authentication token for the webhook"
          }
        },
        "required": ["url"]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Location of the validation error"
          },
          "msg": {
            "type": "string",
            "description": "Error message"
          },
          "type": {
            "type": "string",
            "description": "Error type"
          }
        },
        "required": ["loc", "msg", "type"]
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "paymentProxy": {
        "type": "apiKey",
        "name": "X-Payment-Token",
        "in": "header",
        "description": "Payment token required for paid endpoints"
      }
    }
  }
}
